package os

func syscall {
    [args]
    a size=4 reg=1
    b size=4 reg=2
    c size=4 reg=3
    [rets]
    x size=4 reg=1
    y size=4 reg=2
    z size=4 reg=3
    [locals]
    f size=4
    <0> size=4
    <1> size=4
    <2> size=1
    <3> size=4
    <4> size=4
    <5> size=4
    B2:
        <0> = asm/builtin.Syscall
        <1> = <0>
        f = <1>
        <2> = ?f f
        if <2> goto B4
    B3:
        [] = asm/builtin.Panic()
    B4:
        [<3> <4> <5>] = f(a,b,c)
    ----
    B2:
        lui r4 0x0000
        ori r4 r4 0x0000
        sw r4 sp 20
        lw r4 sp 20
        sw r4 sp 16
        lw r4 sp 16
        sw r4 sp 24
        lw r4 sp 24
        sltu r4 r0 r4
        sb r4 sp 15
        lbu r4 sp 15
        bne r0 r4 4
        bne r0 r4 4
    B3:
        jal 0
    B4:
        lw r1 sp 48
        lw r2 sp 44
        lw r3 sp 40
        lw r4 sp 24
        addi ret pc 4
        ori pc r4 0x0000
        sw r1 sp 8
        sw r2 sp 4
        sw r3 sp
}

func Putc {
    [args]
    v size=1 reg=1
    [rets]
    <?> size=4 reg=1
    [saved regs]
    <?> size=4 reg=2
    <?> size=4 reg=3
    [locals]
    ret size=4
    _ size=4
    _ size=4
    <0> size=4
    <1> size=4
    <2> size=4
    <3> size=4
    <4> size=4
    <5> size=4
    <6> size=4
    B2:
        <1> = cast v
        [<3> <4> <5>] = syscall(0,<1>,0)
        ret = <3>
        _ = <4>
        _ = <5>
        <6> = cast ret
        <?> = <6>
        goto B1
    B3:
    ----
    B2:
        lb r4 sp 55
        sw r4 sp 20
        ori r1 r0 0x0000
        lw r2 sp 20
        ori r3 r0 0x0000
        jal 0
        sw r1 sp 12
        sw r2 sp 8
        sw r3 sp 4
        lw r4 sp 12
        sw r4 sp 36
        lw r4 sp 8
        sw r4 sp 32
        lw r4 sp 4
        sw r4 sp 28
        lw r4 sp 36
        sw r4 sp
        lw r4 sp
        sw r4 sp 48
        j 0
        j 0
    B3:
}

func Exit {
    [args]
    v size=4 reg=1
    [saved regs]
    <?> size=4 reg=2
    <?> size=4 reg=3
    [locals]
    <0> size=4
    <1> size=4
    <2> size=4
    <3> size=4
    <4> size=4
    <5> size=4
    B2:
        <1> = cast v
        [<3> <4> <5>] = syscall(1,<1>,0)
    ----
    B2:
        lw r4 sp 32
        sw r4 sp 16
        ori r1 r0 0x0001
        lw r2 sp 16
        ori r3 r0 0x0000
        jal 0
        sw r1 sp 8
        sw r2 sp 4
        sw r3 sp
}

func ExecWithConfig {
    [args]
    cmd size=8
    c size=4 reg=1
    [rets]
    <?> size=4 reg=1
    <?> size=4 reg=2
    [saved regs]
    <?> size=4 reg=2
    <?> size=4 reg=3
    [locals]
    pid size=4
    err size=4
    _ size=4
    <0> size=4
    <1> size=4
    <2> size=4
    <3> size=4
    <4> size=4
    <5> size=4
    <6> size=4
    <7> size=4
    <8> size=4
    <9> size=4
    <10> size=4
    B2:
        <1> = & cmd
        <2> = <1>
        <3> = c
        [<4> <5> <6>] = syscall(2,<2>,<3>)
        pid = <4>
        err = <5>
        _ = <6>
        <7> = cast pid
        <8> = cast err
        <9> = <7>
        <10> = <8>
        <?> = <9>
        <?> = <10>
        goto B1
    B3:
    ----
    B2:
        addi r4 sp 80
        sw r4 sp 36
        lw r4 sp 36
        sw r4 sp 32
        lw r4 sp 72
        sw r4 sp 28
        ori r1 r0 0x0002
        lw r2 sp 32
        lw r3 sp 28
        jal 0
        sw r1 sp 24
        sw r2 sp 20
        sw r3 sp 16
        lw r4 sp 24
        sw r4 sp 52
        lw r4 sp 20
        sw r4 sp 48
        lw r4 sp 16
        sw r4 sp 44
        lw r4 sp 52
        sw r4 sp 12
        lw r4 sp 48
        sw r4 sp 8
        lw r4 sp 12
        sw r4 sp 4
        lw r4 sp 8
        sw r4 sp
        lw r4 sp 4
        sw r4 sp 68
        lw r4 sp
        sw r4 sp 64
        j 0
        j 0
    B3:
}

func Exec {
    [args]
    cmd size=8
    [rets]
    pid size=4 reg=1
    err size=4 reg=2
    [saved regs]
    <?> size=4 reg=1
    <?> size=4 reg=2
    <?> size=4 reg=3
    [locals]
    <0> size=4
    <1> size=4
    <2> size=4
    <3> size=4
    <4> size=4
    B2:
        [<1> <2>] = ExecWithConfig(cmd,0)
        <3> = <1>
        <4> = <2>
        pid = <3>
        err = <4>
        goto B1
    B3:
    ----
    B2:
        addi r1 sp -8
        addi r2 sp 44
        ori r3 r0 0x0008
        jal 0
        ori r1 r0 0x0000
        jal 0
        sw r1 sp 12
        sw r2 sp 8
        lw r4 sp 12
        sw r4 sp 4
        lw r4 sp 8
        sw r4 sp
        lw r4 sp 4
        sw r4 sp 36
        lw r4 sp
        sw r4 sp 32
        j 0
        j 0
    B3:
}

func Join {
    [args]
    pid size=4 reg=1
    [rets]
    <?> size=4 reg=1
    <?> size=4 reg=2
    [saved regs]
    <?> size=4 reg=2
    <?> size=4 reg=3
    [locals]
    ret size=4
    err size=4
    _ size=4
    <0> size=4
    <1> size=4
    <2> size=4
    <3> size=4
    <4> size=4
    <5> size=4
    <6> size=4
    <7> size=4
    <8> size=4
    <9> size=4
    B2:
        <1> = cast pid
        [<3> <4> <5>] = syscall(3,<1>,0)
        ret = <3>
        err = <4>
        _ = <5>
        <6> = cast ret
        <7> = cast err
        <8> = <6>
        <9> = <7>
        <?> = <8>
        <?> = <9>
        goto B1
    B3:
    ----
    B2:
        lw r4 sp 68
        sw r4 sp 32
        ori r1 r0 0x0003
        lw r2 sp 32
        ori r3 r0 0x0000
        jal 0
        sw r1 sp 24
        sw r2 sp 20
        sw r3 sp 16
        lw r4 sp 24
        sw r4 sp 48
        lw r4 sp 20
        sw r4 sp 44
        lw r4 sp 16
        sw r4 sp 40
        lw r4 sp 48
        sw r4 sp 12
        lw r4 sp 44
        sw r4 sp 8
        lw r4 sp 12
        sw r4 sp 4
        lw r4 sp 8
        sw r4 sp
        lw r4 sp 4
        sw r4 sp 64
        lw r4 sp
        sw r4 sp 60
        j 0
        j 0
    B3:
}

func Read {
    [args]
    fd size=4 reg=1
    buf size=8
    [rets]
    <?> size=4 reg=1
    <?> size=4 reg=2
    [saved regs]
    <?> size=4 reg=2
    <?> size=4 reg=3
    [locals]
    n size=4
    err size=4
    _ size=4
    <0> size=4
    <1> size=4
    <2> size=4
    <3> size=4
    <4> size=4
    <5> size=4
    <6> size=4
    <7> size=4
    <8> size=4
    <9> size=4
    <10> size=4
    B2:
        <1> = cast fd
        <2> = & buf
        <3> = <2>
        [<4> <5> <6>] = syscall(5,<1>,<3>)
        n = <4>
        err = <5>
        _ = <6>
        <7> = cast n
        <8> = cast err
        <9> = <7>
        <10> = <8>
        <?> = <9>
        <?> = <10>
        goto B1
    B3:
    ----
    B2:
        lw r4 sp 72
        sw r4 sp 36
        addi r4 sp 80
        sw r4 sp 32
        lw r4 sp 32
        sw r4 sp 28
        ori r1 r0 0x0005
        lw r2 sp 36
        lw r3 sp 28
        jal 0
        sw r1 sp 24
        sw r2 sp 20
        sw r3 sp 16
        lw r4 sp 24
        sw r4 sp 52
        lw r4 sp 20
        sw r4 sp 48
        lw r4 sp 16
        sw r4 sp 44
        lw r4 sp 52
        sw r4 sp 12
        lw r4 sp 48
        sw r4 sp 8
        lw r4 sp 12
        sw r4 sp 4
        lw r4 sp 8
        sw r4 sp
        lw r4 sp 4
        sw r4 sp 68
        lw r4 sp
        sw r4 sp 64
        j 0
        j 0
    B3:
}

func Write {
    [args]
    fd size=4 reg=1
    buf size=8
    [rets]
    <?> size=4 reg=1
    <?> size=4 reg=2
    [saved regs]
    <?> size=4 reg=2
    <?> size=4 reg=3
    [locals]
    n size=4
    err size=4
    _ size=4
    <0> size=4
    <1> size=4
    <2> size=4
    <3> size=4
    <4> size=4
    <5> size=4
    <6> size=4
    <7> size=4
    <8> size=4
    <9> size=4
    <10> size=4
    B2:
        <1> = cast fd
        <2> = & buf
        <3> = <2>
        [<4> <5> <6>] = syscall(4,<1>,<3>)
        n = <4>
        err = <5>
        _ = <6>
        <7> = cast n
        <8> = cast err
        <9> = <7>
        <10> = <8>
        <?> = <9>
        <?> = <10>
        goto B1
    B3:
    ----
    B2:
        lw r4 sp 72
        sw r4 sp 36
        addi r4 sp 80
        sw r4 sp 32
        lw r4 sp 32
        sw r4 sp 28
        ori r1 r0 0x0004
        lw r2 sp 36
        lw r3 sp 28
        jal 0
        sw r1 sp 24
        sw r2 sp 20
        sw r3 sp 16
        lw r4 sp 24
        sw r4 sp 52
        lw r4 sp 20
        sw r4 sp 48
        lw r4 sp 16
        sw r4 sp 44
        lw r4 sp 52
        sw r4 sp 12
        lw r4 sp 48
        sw r4 sp 8
        lw r4 sp 12
        sw r4 sp 4
        lw r4 sp 8
        sw r4 sp
        lw r4 sp 4
        sw r4 sp 68
        lw r4 sp
        sw r4 sp 64
        j 0
        j 0
    B3:
}

func Close {
    [args]
    fd size=4 reg=1
    [rets]
    <?> size=4 reg=1
    [saved regs]
    <?> size=4 reg=2
    <?> size=4 reg=3
    [locals]
    err size=4
    _ size=4
    _ size=4
    <0> size=4
    <1> size=4
    <2> size=4
    <3> size=4
    <4> size=4
    <5> size=4
    <6> size=4
    B2:
        <1> = cast fd
        [<3> <4> <5>] = syscall(6,<1>,0)
        err = <3>
        _ = <4>
        _ = <5>
        <6> = cast err
        <?> = <6>
        goto B1
    B3:
    ----
    B2:
        lw r4 sp 52
        sw r4 sp 20
        ori r1 r0 0x0006
        lw r2 sp 20
        ori r3 r0 0x0000
        jal 0
        sw r1 sp 12
        sw r2 sp 8
        sw r3 sp 4
        lw r4 sp 12
        sw r4 sp 36
        lw r4 sp 8
        sw r4 sp 32
        lw r4 sp 4
        sw r4 sp 28
        lw r4 sp 36
        sw r4 sp
        lw r4 sp
        sw r4 sp 48
        j 0
        j 0
    B3:
}
